package myprojects;
import static org.testng.Assert.assertEquals;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;

//scenario
/*
go to amazon web page
verify title of webpage
search product with specific data
how many products on search result
navigate on first result and go to the product page
verify title of item
how many customer reviw
price of product
add product on card
go to login page and insert email addres/
should display error message 
insert email adress
create acount and insert data
verify expected alert 
*/

public class amazon {

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub

		// Chrome
		System.setProperty("webdriver.chrome.driver",
				"C:/Users/marin/Documents/test/chromedriver_win32/chromedriver.exe");
		WebDriver driver = new ChromeDriver();

		// Firefox
		// System.setProperty("webdriver.gecko.driver",
		// "C:/Users/marin/Documents/test/geckodriver");
		// WebDriver driver1 = new FirefoxDriver();

		driver.get("https://www.amazon.com/");

		// verify title of webpage
		if (driver.getTitle().equalsIgnoreCase("Amazon.com. Spend less. Smile more."))
			// Pass
			System.out.println("Page title contains expected text ");
		else
			// Fail
			System.out.println("Page title doesn't contains expected text");

		// search product
		driver.findElement(By.id("twotabsearchtextbox")).sendKeys("Monobeach Princess Tent Girls");
		driver.findElement(By.id("nav-search-submit-button")).submit();
		Thread.sleep(1000);

		// How many products on search result Monobeach Princess Tent Girls
		WebElement searchdriver = driver.findElement(By.xpath("//*[@id='search']/div[1]/div[1]/div/span[1]/div[1]"));
		System.out.println(searchdriver.findElements(By.partialLinkText("Monobeach Princess Tent Girls")).size());

		// navigate on first result and go to the product page
		driver.findElement(By.xpath("//span[@class='a-size-base-plus a-color-base a-text-normal']")).click();

		// Verify item title on page
		// System.out.println("Page title is : " + driver.getTitle());
		// assertTrue(driver.getTitle().contains(""Amazon.com: Monobeach Princess Tent
		// Girls Large Playhouse Kids Castle Play Tent with Star Lights Toy for Children
		// Indoor and Outdoor Games, 55'' x 53'' (DxH) : Toys & Games""));

		String actualTitle = driver.getTitle();
		String expectedTitle = "Amazon.com: Monobeach Princess Tent Girls Large Playhouse Kids Castle Play Tent with Star Lights Toy for Children Indoor and Outdoor Games, 55'' x 53'' (DxH) : Toys & Games";
		assertEquals(expectedTitle, actualTitle);
		System.out.println("Page title is : " + actualTitle);

		// how many customer reviws

		// System.out.print(driver.findElement(By.id("acrCustomerReviewText")).getText());

		String CustomerReviews = driver.findElement(By.id("acrCustomerReviewText")).getText();
		System.out.println("Customer Reviews is -- " + CustomerReviews);

		// price

		String price = driver
				.findElement(By.xpath("//*[@id='corePriceDisplay_desktop_feature_div']/div[1]/span[2]/span[2]/span[2]"))
				.getText();
		System.out.println("Price is -- " + price);

		// add product on card
		driver.findElement(By.id("add-to-cart-button")).click();
		Thread.sleep(1000);

		// refresh page
		driver.navigate().refresh();

		// go to the login page and insert the email
		driver.findElement(By.id("nav-link-accountList-nav-line-1")).click();
		driver.findElement(By.id("ap_email")).sendKeys("123456789@test.ru");
		driver.findElement(By.id("continue")).click();

		// should display error message
		String expectedHeading = "We cannot find an account with that email address";
		String heading = driver.findElement(By.cssSelector("#auth-error-message-box > div > div > ul")).getText();
		if (expectedHeading.equalsIgnoreCase(heading))
			System.out.println("The expected error message is same as actual error message-- " + heading);
		else
			System.out.println("The expected error message doesn't match the actual error message -- " + heading);

		// create new account
		driver.findElement(By.id("createAccountSubmit")).click();
		String name = "Rina";
		String email = "test@test1.com";
		String password = "test12";
		String re_enter_password = "test123";

		driver.findElement(By.id("ap_customer_name")).sendKeys(name);
		driver.findElement(By.id("ap_email")).sendKeys(email);
		driver.findElement(By.id("ap_password")).sendKeys(password);
		driver.findElement(By.id("ap_password_check")).sendKeys(re_enter_password);
		driver.findElement(By.cssSelector("#continue")).click();

		// verify expected alert
		Boolean Display = driver.findElement(By.cssSelector("#auth-password-mismatch-alert > div > div")).isDisplayed();
		System.out.println("Element displayed is :" + Display);

		// verify expected alert
		Assert.assertEquals(driver.findElement(By.cssSelector("#auth-password-mismatch-alert > div > div")).getText(),
				"Passwords must match");
		System.out.println(driver.findElement(By.cssSelector("#auth-password-mismatch-alert > div > div")).getText());

	}

}
